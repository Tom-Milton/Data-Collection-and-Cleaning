
 malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network[1][2] (by contrast, software that causes unintentional harm due to some deficiency is typically described as a software bug).[3] a wide variety of malware types exist, including computer viruses, worms, trojan horses, ransomware, spyware, adware, rogue software, wiper and scareware.  
 programs are also considered malware if they secretly act against the interests of the computer user. for example, at one point sony music compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying, but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.[4]
 a range of antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, to help detect it if it is already present, and to recover from malware-associated malicious activity and attacks.[5]
 many early infectious programs, including the first internet worm, were written as experiments or pranks.[6] today, malware is used by both black hat hackers and governments, to steal personal, financial, or business information.[7][8]
 malware is sometimes used broadly against government or corporate websites to gather guarded information,[9] or to disrupt their operation in general. however, malware can be used against individuals to gain information such as personal identification numbers or details, bank or credit card numbers, and passwords.
 since the rise of widespread broadband internet access, malicious software has more frequently been designed for profit. since 2003, the majority of widespread viruses and worms have been designed to take control of users' computers for illicit purposes.[10] infected "zombie computers" can be used to send email spam, to host contraband data such as child pornography,[11] or to engage in distributed denial-of-service attacks as a form of extortion.[12]
 programs designed to monitor users' web browsing, display unsolicited advertisements, or redirect affiliate marketing revenues are called spyware. spyware programs do not spread like viruses; instead they are generally installed by exploiting security holes. they can also be hidden and packaged together with unrelated user-installed software.[13] the sony bmg rootkit was intended to prevent illicit copying; but also reported on users' listening habits, and unintentionally created extra security vulnerabilities.[4]
 ransomware affects an infected computer system in some way, and demands payment to bring it back to its normal state. there are two variations of ransomware, being crypto ransomware and locker ransomware.[14] with the locker ransomware just locking down a computer system without encrypting its contents. whereas the traditional ransomware is one that locks down a system and encrypts its contents. for example, programs such as cryptolocker encrypt files securely, and only decrypt them on payment of a substantial sum of money.[15]
 some malware is used to generate money by click fraud, making it appear that the computer user has clicked an advertising link on a site, generating a payment from the advertiser. it was estimated in 2012 that about 60 to 70% of all active malware used some kind of click fraud, and 22% of all ad-clicks were fraudulent.[16]
 in addition to criminal money-making, malware can be used for sabotage, often for political motives. stuxnet, for example, was designed to disrupt very specific industrial equipment. there have been politically motivated attacks which spread over and shut down large computer networks, including massive deletion of files and corruption of master boot records, described as "computer killing." such attacks were made on sony pictures entertainment (25 november 2014, using malware known as shamoon or w32.disttrack) and saudi aramco (august 2012).[17][18]
 the best-known types of malware, viruses and worms, are known for the manner in which they spread, rather than any specific types of behavior. a computer virus is software that embeds itself in some other executable software (including the operating system itself) on the target system without the user's knowledge and consent and when it is run, the virus is spread to other executables. on the other hand, a worm is a stand-alone malware software that actively transmits itself over a network to infect other computers and can copy itself without infecting files. these definitions lead to the observation that a virus requires the user to run an infected software or operating system for the virus to spread, whereas a worm spreads itself.[19]
 these categories are not mutually exclusive, so malware may use multiple techniques.[20] this section only applies to malware designed to operate undetected, not sabotage and ransomware.
 a computer virus is software usually hidden within another seemingly innocuous program that can produce copies of itself and insert them into other programs or files, and that usually performs a harmful action (such as destroying data).[21]  an example of this is a pe infection, a technique, usually used to spread malware, that inserts extra data or executable code into pe files.[22]
 'lock-screens', or screen lockers is a type of “cyber police” ransomware that blocks screens on windows or android devices with a false accusation in harvesting illegal content, trying to scare the victims into paying up a fee.[23]
jisut and slocker impact android devices more than other lock-screens, with jisut making up nearly 60 percent of all android ransomware detections.[24]
 encryption-based ransomware, like the name suggests, is a type of ransomware then encrypts all files on an infected machine. these types of malware then display a pop-up informing the user that their files have been encrypted and that they must pay (usually in bitcoin) to recover them. some examples of encryption-based ransomware are cryptolocker and wannacry. [25]
 a trojan horse is a harmful program that misrepresents itself to masquerade as a regular, benign program or utility in order to persuade a victim to install it. a trojan horse usually carries a hidden destructive function that is activated when the application is started. the term is derived from the ancient greek story of the trojan horse used to invade the city of troy by stealth.[26][27][28][29][30]
 trojan horses are generally spread by some form of social engineering, for example, where a user is duped into executing an e-mail attachment disguised to be unsuspicious, (e.g., a routine form to be filled in), or by drive-by download. although their payload can be anything, many modern forms act as a backdoor, contacting a controller (phoning home) which can then have unauthorized access to the affected computer, potentially installing additional software such as a keylogger to steal confidential information, cryptomining software or adware to generate revenue to the operator of the trojan.[31] while trojan horses and backdoors are not easily detectable by themselves, computers may appear to run slower, emit more heat or fan noise due to heavy processor or network usage, as may occur when cryptomining software is installed. cryptominers may limit resource usage and/or only run during idle times in an attempt to evade detection.
 unlike computer viruses and worms, trojan horses generally do not attempt to inject themselves into other files or otherwise propagate themselves.[32]
 in spring 2017 mac users were hit by the new version of proton remote access trojan (rat)[33] trained to extract password data from various sources, such as browser auto-fill data, the mac-os keychain, and password vaults.[34]
 once malicious software is installed on a system, it is essential that it stays concealed, to avoid detection. software packages known as rootkits allow this concealment, by modifying the host's operating system so that the malware is hidden from the user. rootkits can prevent a harmful process from being visible in the system's list of processes, or keep its files from being read.[35]
 some types of harmful software contain routines to evade identification and/or removal attempts, not merely to hide themselves. an early example of this behavior is recorded in the jargon file tale of a pair of programs infesting a xerox cp-v time sharing system:
 a backdoor is a method of bypassing normal authentication procedures, usually over a connection to a network such as the internet. once a system has been compromised, one or more backdoors may be installed in order to allow access in the future,[37] invisibly to the user.
 the idea has often been suggested that computer manufacturers preinstall backdoors on their systems to provide technical support for customers, but this has never been reliably verified. it was reported in 2014 that us government agencies had been diverting computers purchased by those considered "targets" to secret workshops where software or hardware permitting remote access by the agency was installed, considered to be among the most productive operations to obtain access to networks around the world.[38] backdoors may be installed by trojan horses, worms, implants, or other methods.[39][40]
 since the beginning of 2015, a sizable portion of malware has been utilizing a combination of many techniques designed to avoid detection and analysis.[41] from the more common, to the least common:
 an increasingly common technique (2015) is adware that uses stolen certificates to disable anti-malware and virus protection; technical remedies are available to deal with the adware.[45]
 nowadays, one of the most sophisticated and stealthy ways of evasion is to use information hiding techniques, namely stegomalware. a survey on stegomalware was published by cabaj et al. in 2018.[46]
 another type of evasion technique is fileless malware or advanced volatile threats (avts). fileless malware does not require a file to operate. it runs within memory and utilizes existing system tools to carry out malicious acts. because there are no files on the system, there are no executable files for antivirus and forensic tools to analyze, making such malware nearly impossible to detect. the only way to detect fileless malware is to catch it operating in real time. recently these type attacks have become more frequent with a 432% increase in 2017 and makeup 35% of the attacks in 2018. such attacks are not easy to perform but are becoming more prevalent with the help of exploit-kits. [47][48]
 
 malware exploits security defects (security bugs or vulnerabilities) in the design of the operating system, in applications (such as browsers, e.g. older versions of microsoft internet explorer supported by windows xp[49]), or in vulnerable versions of browser plugins such as adobe flash player, adobe acrobat or reader, or java se.[50][51] sometimes even installing new versions of such plugins does not automatically uninstall old versions. security advisories from plug-in providers announce security-related updates.[52] common vulnerabilities are assigned cve ids and listed in the us national vulnerability database. secunia psi[53] is an example of software, free for personal use, that will check a pc for vulnerable out-of-date software, and attempt to update it.
 malware authors target bugs, or loopholes, to exploit. a common method is exploitation of a buffer overrun vulnerability, where software designed to store data in a specified region of memory does not prevent more data than the buffer can accommodate being supplied. malware may provide data that overflows the buffer, with malicious executable code or data after the end; when this payload is accessed it does what the attacker, not the legitimate software, determines.
 anti-malware is a continuously growing threat to malware detection.[54] according to symantec’s 2018 internet security threat report (istr), malware variants number has got up to 669,947,865 in 2017, which is the double of malware variants in 2016.[54]
 early pcs had to be booted from floppy disks. when built-in hard drives became common, the operating system was normally started from them, but it was possible to boot from another boot device if available, such as a floppy disk, cd-rom, dvd-rom, usb flash drive or network. it was common to configure the computer to boot from one of these devices when available. normally none would be available; the user would intentionally insert, say, a cd into the optical drive to boot the computer in some special way, for example, to install an operating system. even without booting, computers can be configured to execute software on some media as soon as they become available, e.g. to autorun a cd or usb device when inserted.
 malware distributors would trick the user into booting or running from an infected device or medium. for example, a virus could make an infected computer add autorunnable code to any usb stick plugged into it. anyone who then attached the stick to another computer set to autorun from usb would in turn become infected, and also pass on the infection in the same way.[55] more generally, any device that plugs into a usb port - even lights, fans, speakers, toys, or peripherals such as a digital microscope - can be used to spread malware. devices can be infected during manufacturing or supply if quality control is inadequate.[55]
 this form of infection can largely be avoided by setting up computers by default to boot from the internal hard drive, if available, and not to autorun from devices.[55] intentional booting from another device is always possible by pressing certain keys during boot.
 older email software would automatically open html email containing potentially malicious javascript code. users may also execute disguised malicious email attachments. the 2018 data breach investigations report by verizon, cited by cso online, states that emails are the primary method of malware delivery, accounting for 92% of malware delivery around the world.[56][57]
 in computing, privilege refers to how much a user or program is allowed to modify a system. in poorly designed computer systems, both users and programs can be assigned more privileges than they should have, and malware can take advantage of this. the two ways that malware does this is through overprivileged users and overprivileged code.[citation needed]
 some systems allow all users to modify their internal structures, and such users today would be considered over-privileged users. this was the standard operating procedure for early microcomputer and home computer systems, where there was no distinction between an administrator or root, and a regular user of the system. in some systems, non-administrator users are over-privileged by design, in the sense that they are allowed to modify internal structures of the system. in some environments, users are over-privileged because they have been inappropriately granted administrator or equivalent status.[58]
 some systems allow code executed by a user to access all rights of that user, which is known as over-privileged code. this was also standard operating procedure for early microcomputer and home computer systems. malware, running as over-privileged code, can use this privilege to subvert the system. almost all currently popular operating systems, and also many scripting applications allow code too many privileges, usually in the sense that when a user executes code, the system allows that code all rights of that user. this makes users vulnerable to malware in the form of e-mail attachments, which may or may not be disguised.[citation needed]
 as malware attacks become more frequent, attention has begun to shift from viruses and spyware protection, to malware protection, and programs that have been specifically developed to combat malware. (other preventive and recovery measures, such as backup and recovery methods, are mentioned in the computer virus article).
reboot to restore software is also useful for mitigating malware by rolling back malicious alterations.
 a specific component of anti-virus and anti-malware software, commonly referred to as an on-access or real-time scanner, hooks deep into the operating system's core or kernel and functions in a manner similar to how certain malware itself would attempt to operate, though with the user's informed permission for protecting the system. any time the operating system accesses a file, the on-access scanner checks if the file is a 'legitimate' file or not. if the file is identified as malware by the scanner, the access operation will be stopped, the file will be dealt with by the scanner in a pre-defined way (how the anti-virus program was configured during/post installation), and the user will be notified.[citation needed] this may have a considerable performance impact on the operating system, though the degree of impact is dependent on how well the scanner was programmed. the goal is to stop any operations the malware may attempt on the system before they occur, including activities which might exploit bugs or trigger unexpected operating system behavior.
 anti-malware programs can combat malware in two ways:
 real-time protection from malware works identically to real-time antivirus protection: the software scans disk files at download time, and blocks the activity of components known to represent malware. in some cases, it may also intercept attempts to install start-up items or to modify browser settings. because many malware components are installed as a result of browser exploits or user error, using security software (some of which are anti-malware, though many are not) to "sandbox" browsers (essentially isolate the browser from the computer and hence any malware induced change) can also be effective in helping to restrict any damage done.[61]
 examples of microsoft windows antivirus and anti-malware software include the optional microsoft security essentials[62] (for windows xp, vista, and windows 7) for real-time protection, the windows malicious software removal tool[63] (now included with windows (security) updates on "patch tuesday", the second tuesday of each month), and windows defender (an optional download in the case of windows xp, incorporating mse functionality in the case of windows 8 and later).[64] additionally, several capable antivirus software programs are available for free download from the internet (usually restricted to non-commercial use).[65] tests found some free programs to be competitive with commercial ones.[65][66][67] microsoft's system file checker can be used to check for and repair corrupted system files.
 some viruses disable system restore and other important windows tools such as task manager and command prompt. many such viruses can be removed by rebooting the computer, entering windows safe mode with networking,[68] and then using system tools or microsoft safety scanner.[69]
 hardware implants can be of any type, so there can be no general way to detect them.
 as malware also harms the compromised websites (by breaking reputation, blacklisting in search engines, etc.), some websites offer vulnerability scanning.[70]
such scans check the website, detect malware, may note outdated software, and may report known security issues.
 as a last resort, computers can be protected from malware, and infected computers can be prevented from disseminating trusted information, by imposing an "air gap" (i.e. completely disconnecting them from all other networks). however, malware can still cross the air gap in some situations. stuxnet is an example of malware that is introduced to the target environment via a usb drive. 
 "airhopper",[71] "bitwhisper",[72] "gsmem" [73] and "fansmitter" [74] are four techniques introduced by researchers that can leak data from air-gapped computers using electromagnetic, thermal and acoustic emissions.
 grayware (sometimes spelled as greyware) is a term applied to unwanted applications or files that are not classified as malware, but can worsen the performance of computers and may cause security risks.[75]
 it describes applications that behave in an annoying or undesirable manner, and yet are less serious or troublesome than malware. grayware encompasses spyware, adware, fraudulent dialers, joke programs, remote access tools and other unwanted programs that may harm the performance of computers or cause inconvenience. the term came into use around 2004.[76]
 another term, potentially unwanted program (pup) or potentially unwanted application (pua),[77] refers to applications that would be considered unwanted despite often having been downloaded by the user, possibly after failing to read a download agreement. pups include spyware, adware, and fraudulent dialers. many security products classify unauthorised key generators as grayware, although they frequently carry true malware in addition to their ostensible purpose.
 software maker malwarebytes lists several criteria for classifying a program as a pup.[78] some types of adware (using stolen certificates) turn off anti-malware and virus protection; technical remedies are available.[45]
 before internet access became widespread, viruses spread on personal computers by infecting executable programs or boot sectors of floppy disks. by inserting a copy of itself into the machine code instructions in these programs or boot sectors, a virus causes itself to be run whenever the program is run or the disk is booted. early computer viruses were written for the apple ii and macintosh, but they became more widespread with the dominance of the ibm pc and ms-dos system. the first ibm pc virus in the "wild" was a boot sector virus dubbed (c)brain,[79] created in 1986 by the farooq alvi brothers in pakistan.[80]
 the first worms, network-borne infectious programs, originated not on personal computers, but on multitasking unix systems. the first well-known worm was the internet worm of 1988, which infected sunos and vax bsd systems. unlike a virus, this worm did not insert itself into other programs. instead, it exploited security holes (vulnerabilities) in network server programs and started itself running as a separate process.[81] this same behavior is used by today's worms as well.[82][83]
 with the rise of the microsoft windows platform in the 1990s, and the flexible macros of its applications, it became possible to write infectious code in the macro language of microsoft word and similar programs. these macro viruses infect documents and templates rather than applications (executables), but rely on the fact that macros in a word document are a form of executable code.[84]
 the notion of a self-reproducing computer program can be traced back to initial theories about the operation of complex automata.[85] john von neumann showed that in theory a program could reproduce itself. this constituted a plausibility result in computability theory. fred cohen experimented with computer viruses and confirmed neumann's postulate and investigated other properties of malware such as detectability and self-obfuscation using rudimentary encryption. his 1987 doctoral dissertation was on the subject of computer viruses.[86] the combination of cryptographic technology as part of the payload of the virus, exploiting it for attack purposes was initialized and investigated from the mid 1990s, and includes initial ransomware and evasion ideas.[87]
 
 